#include <iostream>
using namespace std;

class intStack
{
private:
  int max;
  int ptr;
  int *stk;

public:
  int Initialize(int max)
  {
    ptr = 0;
    if ((stk = new int[max]) == NULL)
    {
      this->max = 0;
      return -1;
    }
    this->max = max;
    return 0;
  }

  int Push(int x)
  {
    if (ptr >= max)
      return -1;
    stk[ptr++] = x;
    return 0;
  }
  int Pop(int *x)
  {
    if (ptr <= 0)
      return -1;
    *x = stk[--ptr];
    return 0;
  }

  int Peek(int *x)
  {
    if (ptr <= 0)
      return -1;
    *x = stk[ptr - 1];
    return 0;
  }
  void Clear()
  {
    ptr = 0;
  }
  int Capacity()
  {
    return max;
  }
  int Size()
  {
    return ptr;
  }
  int IsEmpty()
  {
    return ptr <= 0;
  }
  int IsFull()
  {
    return ptr = max;
  }
  int Search(int x)
  {
    for (int i = ptr - 1; i >= 0; i--)
    {
      if (stk[i] == x)
        return i;
    }
    return -1;
  }
  void Print() const
  {
    for (int i = 0; i < ptr; i++)
    {
      cout << stk[i];
    }
    cout << endl;
  }
  void Terminate()
  {
    if (stk != NULL)
      delete[] stk;
    max = ptr = 0;
  }
};

int main()
{
  intStack s;
  if (s.Initialize(64) == -1)
  {
    cout << "스택 생성에 실패했습니다." << endl;
    return -1;
  }
  while (1)
  {
    int menu, x, idx;
    cout << "현재 데이터 수 : " << s.Size() << "/" << s.Capacity() << endl;
    cout << "(1)푸시 (2)팝 (3)피크 (4)출력 (5)검색 (6)초기화 (0)종료 : ";
    cin >> menu;

    if (menu == 0)
      break;
    switch (menu)
    {
    case 1:
      cout << "데이터 : ";
      cin >> x;
      if (s.Push(x) == -1)
        cout << "오류";
      break;
    case 2:
      if (s.Pop(&x) == -1)
        cout << "오류";
      else
        cout << "팝 데이터는 " << x << "입니다.";
      break;
    case 3:
      if (s.Peek(&x) == -1)
        cout << "오류";
      else
        cout << "피크 데이터는 " << x << "입니다.";
      break;
    case 4:
      s.Print();
      break;
    case 5:
      cout << "검색 데이터 : ";
      cin >> x;
      if ((idx = s.Search(x)) == -1)
        cout << "오류";
      else
        cout << "데이터는 인덱스 " << idx << " 위치에 있습니다.";
      break;
    case 6:
      s.Clear();
      break;
    }
  }
  s.Terminate();
  return 0;
}
